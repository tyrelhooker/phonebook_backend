{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","handleSearch","searchInput","searchResult","useRef","ref","onChange","current","value","placeholder","PersonForm","handleAddPerson","nameInput","phoneNumInput","onSubmit","e","preventDefault","type","required","Person","handleRemoval","undefined","map","val","key","id","name","repeat","number","onClick","baseUrl","axios","get","then","response","data","newObject","post","delete","put","Notification","message","className","clearInputValues","numberInput","console","log","focus","App","useState","persons","setPersons","setSearchResult","setMessage","useEffect","personsService","initialPersons","catch","error","setTimeout","handleUpdate","foundPerson","window","confirm","newPhoneNumber","person","find","n","changedPhoneNum","returnedPerson","findPersons","toUpperCase","filter","includes","result","foundPersons","addSearchResult","entirePhoneNumInput","entireNameInput","toLowerCase","string","newPersons","split","spaces","trim","letter","substring","join","returnedPersons","concat","addPerson","personToRemove","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.224173fb.chunk.js","sourcesContent":["import React, { useRef } from 'react';\n\nconst Filter = ({ handleSearch, searchResult }) => {\n  const searchInput = useRef();\n\n  const change = () => {\n    handleSearch(searchInput.current.value);\n  }\n\n  return (\n    <>\n      Search for: \n      <input\n        ref={searchInput}\n        onChange={change}\n        placeholder='Enter a name to search'\n      />\n    </>\n  )\n}\n\nexport default Filter;","import React, { useRef } from 'react';\n\nconst PersonForm = ({ handleAddPerson }) => {\n  const nameInput = useRef();\n  const phoneNumInput = useRef();\n\n  const submit = e => {\n    e.preventDefault();\n    handleAddPerson(nameInput.current.value, phoneNumInput.current.value, phoneNumInput, nameInput);\n    // nameInput.current.value = '';\n    // phoneNumInput.current.value = '';\n    // nameInput.current.focus();\n  }\n\n  return (\n    <>\n      <form onSubmit={submit}>\n        <div>name: &nbsp;\n          <input\n            ref={nameInput}\n            type=\"text\"\n            placeholder={'enter person\\'s name'}\n            required\n          />\n        </div>\n        <div>phone number: &nbsp;\n          <input\n            ref={phoneNumInput}\n            type=\"text\"\n            placeholder={'xxx-xxx-xxxx'}\n            required\n          />\n        </div>\n        <button type=\"submit\">Add Person</button>\n      </form>\n    </>\n  )\n}\n\nexport default PersonForm;","import React from 'react';\n\nconst Person = ({ searchResult, handleRemoval }) => {\n  return (\n    <>\n      <table>\n        <tbody>\n          {searchResult === undefined \n            ? <tr><td>None: Search for a name to display results</td></tr> \n            : searchResult.map(val =>\n              <tr key={val.id}>\n                <td> {val.name} </td>\n                <td>{'.'.repeat(10)}</td>\n                <td>{val.number}</td>\n                <td>\n                  <button onClick={() => handleRemoval(val.id)}>\n                    delete\n                  </button>\n                </td>\n              </tr> \n            )\n          }\n        </tbody>\n      </table>\n      \n     \n    </>\n  )\n}\n\nexport default Person;","import axios from 'axios';\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then(response => response.data);\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then(response => response.data);\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then(response => response.data);\n}\n\nexport default { getAll, create, remove, update };","import React from 'react';\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"message\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Person from './components/Person';\nimport personsService from './services/persons';\nimport Notification from './components/Notification';\n\nconst convertToCamelCase = (string) => {\n  return string.split(' ')\n    .map(spaces => spaces.trim())\n    .map(letter => letter[0].toUpperCase() + letter.substring(1))\n    .join(' ');\n}\n\nconst clearInputValues = (nameInput, numberInput) => {\n  console.log('nameInput', nameInput);\n  nameInput.current.value = '';\n  numberInput.current.value='';\n  nameInput.current.focus();\n  \n  \n}\n\n// TODO: Change the messages so that successful messages have green border and error messages have red borders. \nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [searchResult, setSearchResult] = useState([]);\n  const [message, setMessage] = useState(null);\n  \n\n  useEffect(() => {\n    \n    personsService\n      .getAll()\n      .then(initialPersons => setPersons(initialPersons))\n      .catch(error => {\n        setMessage(`${error}: Failed to retrieve persons.`)\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n      })\n      \n  }, [searchResult]);\n\n\n  const handleAddPerson = (nameInput, phoneNumInput, entirePhoneNumInput, entireNameInput) => {\n\n    const addPerson = () => {\n      const newPersons =  \n        {\n          name: convertToCamelCase(nameInput),\n          //TODO: add checks to normalize phoneNumInput\n          number: phoneNumInput\n        };\n\n      personsService\n        .create(newPersons)\n        .then(returnedPersons => {\n          setPersons(persons.concat(returnedPersons))\n        })\n      \n      \n\n      \n      clearInputValues(entireNameInput, entirePhoneNumInput)\n      setMessage(`${newPersons.name} was added to phonebook`)\n      setTimeout(() => {\n        \n        setMessage(null)\n      }, 5000)\n      \n    }\n\n    let foundPerson = persons.find(person => person.name.toLowerCase() === nameInput.toLowerCase());\n\n    foundPerson \n      ? handleUpdate(foundPerson, entirePhoneNumInput, entireNameInput)\n      : addPerson();\n    \n      \n  }\n\n\n  // TODO: fix the flow of this function. Maybe refactor the PersonForm Component?\n  const handleUpdate = ( foundPerson, phoneNumInput, nameInput ) => {\n    const {id, name} = foundPerson;\n    const changePhoneNum = window.confirm(`${name} already exists. Would you like to change their phone number in the phonebook?`)\n\n    if (changePhoneNum) {\n\n      phoneNumInput.current.focus();\n      const newPhoneNumber = phoneNumInput.current.value;\n    \n      const person = persons.find(n => n.id === id);\n      const changedPhoneNum = { ...person, number: newPhoneNumber}\n\n      personsService\n        .update(id, changedPhoneNum)\n        .then(returnedPerson => \n          setPersons(persons.map(person => \n            person.id !== id \n            ? person \n            : returnedPerson\n          ))\n        )\n        .catch(error => setMessage(`${error}:  ${name}'s has previously been deleted`))\n\n      setMessage(`${name}'s phone number has been changed`)\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    }\n    clearInputValues(nameInput, phoneNumInput)\n  }\n\n\n  const handleSearch = (searchInput) => {\n    // let foundPersons = [];\n\n    const addSearchResult = (result) => {\n      const foundPersons = result();\n      setSearchResult(foundPersons);      \n    }\n\n    const findPersons = () => {\n        searchInput = searchInput.toUpperCase();\n      \n        return persons.filter(person => person.name.toUpperCase().includes(searchInput));\n      }\n\n      \n    const noPersonsFound = () => {\n      return console.log('No person found');\n    }\n\n    findPersons\n      ? addSearchResult(findPersons)\n      : noPersonsFound(); \n  }\n\n\n  const handleRemoval = (id) => {\n    const personToRemove = persons.find(n => \n      (n.id === id)\n    )\n    \n    const confirmRemoval = window.confirm(`Delete ${personToRemove.name}?`)\n\n    if (confirmRemoval) {\n      const foundPersons = persons.filter(n => n.id !== id);\n      console.log(foundPersons);\n\n      personsService\n        .remove(id)\n        // TODO: Is it better to promise chain the setState or have them separate?\n        .then(setPersons(foundPersons))\n        .then(setSearchResult(searchResult.filter(n => n.id !== id)))\n      \n      setMessage(`${personToRemove.name} has been deleted`)\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    }\n  }\n\n\n  return (\n    <div className=\"App\">\n      \n      <h2>Phonebook</h2>\n\n      \n\n      <h3>Name Search</h3>\n      <Filter handleSearch={handleSearch} searchResult={searchResult} />\n\n      <h3>Add Person to Phonebook</h3>\n      <PersonForm handleAddPerson={handleAddPerson}/>\n      <Notification message={message} />\n      <h3>Results</h3>\n      <Person searchResult={searchResult} handleRemoval={handleRemoval} />\n      \n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}